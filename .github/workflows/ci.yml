name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
      - run: python -m pip install --upgrade pip setuptools wheel twine readme-renderer
      - uses: actions/checkout@v2.3.4
      - run: python setup.py sdist bdist_wheel
      - run: python -m twine check dist/*

  standardjs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: '12.x'
      - run: npm install -g standard
      - run: standard

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
      - run: python -m pip install -U setuptools wheel
      - uses: actions/checkout@v2.3.4
      - run: sudo apt-get install -y gettext graphviz
      - run: python setup.py develop
      - run: python setup.py build_sphinx -W -b doctest -b html

  pytest:
    needs:
      - standardjs
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
        django-version:
          - "2.2"
          - "3.1"
          - "3.2"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable
      - name: Install Selenium
        run: |
          mkdir bin
          curl -O https://chromedriver.storage.googleapis.com/`curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d bin
      - uses: actions/checkout@v2.3.4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel codecov
          pip install -e .[test]
          pip install django~=${{ matrix.django-version }}
      - name: Run tests
        run: PATH=$PATH:$(pwd)/bin py.test
      - run: codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
